#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_ruby__2
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..." --weight=1

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
  # Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

systemctl stop $app.target

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

# migrate from rvm to rbenv
ynh_script_progression --message="Remove rvm if needed..." --weight=1
if [ -e "$install_dir/.rvm" ]; then
  sudo -u $app --login << EOF
rvm implode --force
EOF
fi

# remove old gpg keys for rvm
ynh_script_progression --message="Remove old rvm keys..." --weight=1
if gpg --list-keys mpapis@gmail.com >/dev/null 2>&1; then
  ynh_print_info --message="Found mpapis key: deleting"
  sudo -u $app gpg --delete-keys mpapis@gmail.com
#REMOVEME?   ynh_secure_remove "$install_dir/mpapis@gmail.com.pgp"
fi
if gpg --list-keys piotr.kuczynski@gmail.com >/dev/null 2>&1; then
  ynh_print_info --message="Found piotr.kuczynski: deleting"
  sudo -u $app gpg --delete-keys piotr.kuczynski@gmail.com
#REMOVEME?   ynh_secure_remove "$install_dir/piotr.kuczynski@gmail.com.pgp"
fi

if ! [ -d "$install_dir/live" ]; then
  # NOTE if nobody never uploads anything, this won't exist yet
  # creating it anyway, it's simpler if we can assume it exists always
  # but we CANNOT assume it exists from previous version
  if [ -d "$install_dir/diaspora/public/uploads" ]; then
    mv "$install_dir/diaspora/public/uploads" "$install_dir/uploads"
  else
    mkdir "$install_dir/uploads"
  fi
  ynh_delete_file_checksum --file="$install_dir/diaspora/config/diaspora.yml"
  ynh_delete_file_checksum --file="$install_dir/diaspora/config/database.yml"
  mv "$install_dir/diaspora" "$install_dir/live"
  ls -s "$install_dir/uploads" "$install_dir/live/public"
  ynh_store_file_checksum --file="$install_dir/live/config/diaspora.yml"
  ynh_store_file_checksum --file="$install_dir/live/config/database.yml"
  chmod 750 "$install_dir"
  chmod -R o-rwx "$install_dir"
  chown -R $app:www-data "$install_dir"
fi

#REMOVEME? ynh_secure_remove "$install_dir/Experimental_helpers"

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	tmpdir="$(mktemp -d)"
	cp "$install_dir/live/config/diaspora.yml" "$tmpdir/diaspora.yml"
	cp "$install_dir/live/config/database.yml" "$tmpdir/database.yml"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/live"

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/live" --keep="config/diaspora.yml config/database.yml"

  ln -s "$install_dir/uploads" "$install_dir/live/public"

	cp "$tmpdir/diaspora.yml" "$install_dir/live/config/diaspora.yml"
	cp "$tmpdir/database.yml" "$install_dir/live/config/database.yml"
	ynh_secure_remove --file="$tmpdir"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=1

#REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies $build_pkg_dependencies
ynh_exec_warn_less ynh_install_ruby --ruby_version=$ruby_version
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="../conf/diaspora.yml" --destination="$install_dir/live/config/diaspora.yml"
chmod 400 "$install_dir/live/config/diaspora.yml"
chown $app:$app "$install_dir/live/config/diaspora.yml"

ynh_add_config --template="../conf/database.yml" --destination="$install_dir/live/config/database.yml"
chmod 400 "$install_dir/live/config/database.yml"
chown $app:$app "$install_dir/live/config/database.yml"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=40

pushd $install_dir/live
  ynh_use_ruby
  ynh_use_nodejs
  ynh_gem install bundler:$bundler_version
  ynh_exec_as $app $ynh_ruby_load_path $ld_preload script/configure_bundler
  ynh_exec_as $app $ynh_ruby_load_path $ld_preload bin/bundle install --full-index --with=postgresql
  ynh_exec_warn_less ynh_exec_as $app RAILS_ENV=production $ynh_ruby_load_path $ld_preload bin/bundle exec rake db:migrate
  ynh_exec_warn_less ynh_exec_as $app RAILS_ENV=production $ynh_ruby_load_path $ld_preload bin/rake assets:precompile
popd

#REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies
ynh_package_autoremove

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

ynh_add_systemd_config --service="${app}_sidekiq" --template="diaspora_sidekiq.service"
ynh_add_systemd_config --service="${app}_web" --template="diaspora_web.service"

# tmp files
install -T --mode=0644 -v ../conf/diaspora.tmpfiles.d /etc/tmpfiles.d/${app}.conf
ynh_replace_string --match_string=__APP__ --replace_string=$app --target_file=/etc/tmpfiles.d/${app}.conf

# target unit
install -T --mode=0644 -v ../conf/diaspora.target /etc/systemd/system/${app}.target
ynh_replace_string --match_string=__APP__ --replace_string=$app --target_file=/etc/systemd/system/${app}.target

# reload, create, enable and start stuff
systemctl daemon-reload
systemd-tmpfiles --create
systemctl enable ${app}.target --quiet

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app.target \
  --log $install_dir/live/log/production.log \
        $install_dir/live/log/unicorn-stderr.log\
        $install_dir/live/log/unicorn-stdout.log\
        $install_dir/live/log/sidekiq.log\
  --description "Diaspora service (unicorn web and sidekiq)"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

systemctl restart ${app}.target
ynh_systemd_action --service_name=${app}_web.service --action=restart --log_path="$install_dir/live/log/production.log" --line_match="successfully configured the federation library"
ynh_systemd_action --service_name=${app}_sidekiq.service --action=restart --log_path="systemd" --line_match="Running in ruby"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
